{"ast":null,"code":"var _jsxFileName = \"H:\\\\website3\\\\codewithharry\\\\src\\\\Components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextForm = props => {\n  _s();\n  const [text, setText] = useState(\"Enter text here\");\n  const upperCaseHandler = () => {\n    let upperText = text.toUpperCase();\n    setText(upperText);\n  };\n  const changeHandler = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"myBox\",\n        value: text,\n        onChange: changeHandler,\n        rows: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: upperCaseHandler,\n      children: \"Convert to UpperCase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(TextForm, \"cyRA+wM30maxU5PkXk20ENEQ1FU=\");\n_c = TextForm;\nexport default TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextForm","props","_s","text","setText","upperCaseHandler","upperText","toUpperCase","changeHandler","className","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","rows","onClick","_c","$RefreshReg$"],"sources":["H:/website3/codewithharry/src/Components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst TextForm = (props) => {\r\n\r\n    const [text, setText] = useState(\"Enter text here\")\r\n\r\n    const upperCaseHandler = () => {\r\n\r\n        let upperText = text.toUpperCase();\r\n\r\n        setText(upperText)\r\n    }\r\n\r\n    const changeHandler = () => {\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={changeHandler} rows=\"8\"></textarea>\r\n            </div>\r\n\r\n            <button className='btn btn-primary' onClick={upperCaseHandler}>Convert to UpperCase</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextForm\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,iBAAiB,CAAC;EAEnD,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAE3B,IAAIC,SAAS,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC;IAElCH,OAAO,CAACE,SAAS,CAAC;EACtB,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM,CAG5B,CAAC;EAED,oBACIT,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAEtBX,OAAA;MAAAW,QAAA,EAAKT,KAAK,CAACU;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBhB,OAAA;MAAKU,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBX,OAAA;QAAUU,SAAS,EAAC,cAAc;QAACO,EAAE,EAAC,OAAO;QAACC,KAAK,EAAEd,IAAK;QAACe,QAAQ,EAAEV,aAAc;QAACW,IAAI,EAAC;MAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC,eAENhB,OAAA;MAAQU,SAAS,EAAC,iBAAiB;MAACW,OAAO,EAAEf,gBAAiB;MAAAK,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3F,CAAC;AAEd,CAAC;AAAAb,EAAA,CA3BKF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA6Bd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}