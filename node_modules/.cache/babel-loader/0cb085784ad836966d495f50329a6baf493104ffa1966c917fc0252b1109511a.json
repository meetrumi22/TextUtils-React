{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextForm = props => {\n  _s();\n  const [text, setText] = useState(\"Enter text here\");\n  const upperCaseHandler = () => {\n    let upperText = text.toUpperCase();\n    setText(upperText);\n  };\n  const changeHandler = event => {\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(TextForm, \"cyRA+wM30maxU5PkXk20ENEQ1FU=\");\n_c = TextForm;\nexport default TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","TextForm","props","_s","text","setText","upperCaseHandler","upperText","toUpperCase","changeHandler","event","target","value","_c","$RefreshReg$"],"sources":["H:/website3/codewithharry/src/Components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst TextForm = (props) => {\r\n\r\n    const [text, setText] = useState(\"Enter text here\")\r\n\r\n    const upperCaseHandler = () => {\r\n\r\n        let upperText = text.toUpperCase();\r\n\r\n        setText(upperText)\r\n    }\r\n\r\n    const changeHandler = (event) => {\r\n\r\n        setText(event.target.value)\r\n    }\r\n\r\n    return (\r\n       <>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default TextForm\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,iBAAiB,CAAC;EAEnD,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAE3B,IAAIC,SAAS,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC;IAElCH,OAAO,CAACE,SAAS,CAAC;EACtB,CAAC;EAED,MAAME,aAAa,GAAIC,KAAK,IAAK;IAE7BL,OAAO,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,oBACGZ,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEV,CAAC;AAAAK,EAAA,CApBKF,QAAQ;AAAAY,EAAA,GAARZ,QAAQ;AAsBd,eAAeA,QAAQ;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}